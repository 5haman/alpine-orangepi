---
- name: create service dirs
  file:
    path: "{{ item }}"
    state: directory
  loop:
    - /etc/ceph
    - /etc/s6-init/env
    - /var/lib/ceph
    - /var/log/ceph
  when: "inventory_hostname == groups['ec2'][0]"

- name: generate ceph access key
  set_fact:
    access_key: "{{ access_src }}"
  when: "inventory_hostname == groups['ec2'][0]"

- name: generate ceph secret key
  set_fact:
    secret_key: "{{ secret_src }}"
  when: "inventory_hostname == groups['ec2'][0]"

- name: save ceph access key
  copy:
    content: "{{ access_key }}"
    dest: /etc/s6-init/env/S3FS_ACCESSKEY
  when: "inventory_hostname == groups['ec2'][0]"

- name: save ceph secret key
  copy:
    content: "{{ secret_key }}"
    dest: /etc/s6-init/env/S3FS_SECRETKEY
  when: "inventory_hostname == groups['ec2'][0]"

- name: get ceph access key
  shell: cat /etc/s6-init/env/S3FS_ACCESSKEY
  register: s3fs_accesskey
  delegate_to: "{{ groups['ec2'][0] }}"
  delegate_facts: True
  when: "inventory_hostname != groups['ec2'][0]"

- name: get ceph secret key
  shell: cat /etc/s6-init/env/S3FS_SECRETKEY
  register: s3fs_secretkey
  delegate_to: "{{ groups['ec2'][0] }}"
  delegate_facts: True
  when: "inventory_hostname != groups['ec2'][0]"

- name: save ceph credentials
  copy: content="{{ item.value }}" dest="/etc/s6-init/env/{{ item.variable }}"
  with_items:
    - variable: S3FS_ACCESSKEY
      value: "{{ s3fs_accesskey.stdout }}"
    - variable: S3FS_ENDPOINT
      value: "http://{{ leader_ip }}:8080/"
    - variable: S3FS_SECRETKEY
      value: "{{ s3fs_secretkey.stdout }}"
  when: "inventory_hostname != groups['ec2'][0]"

- name: start ceph cluster
  docker_stack:
    name: storage
    state: present
    compose_yaml:
      version: '3.2'
      services:
        ceph:
          image: ceph/demo:latest
          networks:
            - internal
          volumes:
            - /etc/ceph:/etc/ceph
            - /var/lib/ceph:/var/lib/ceph
            - /var/log/ceph:/var/log/ceph
          environment:
            - "CLUSTER=s3-ceph"
            - "CEPH_PUBLIC_NETWORK=0.0.0.0/0"
            - "CEPH_DEMO_UID=s3"
            - "CEPH_DEMO_ACCESS_KEY={{ access_key }}"
            - "CEPH_DEMO_SECRET_KEY={{ secret_key }}"
            - "MON_NAME=s3-mon"
            - "MON_IP=0.0.0.0"
            - "RGW_NAME=s3-rgw"
          deploy:
            placement:
              constraints: [node.labels.location == cloud]
      networks:
        internal:
          attachable: true
          driver: overlay
  when: "inventory_hostname == groups['ec2'][0]"
