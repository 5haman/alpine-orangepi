---
- name: generate private key
  shell: wg genkey
  register: wireguard_privkey
  changed_when: false

- set_fact:
    private_key: "{{ wireguard_privkey.stdout }}"

- name: generate public key
  shell: "echo {{ private_key }} | wg pubkey"
  register: wireguard_pubkey
  changed_when: false

- name: save public key
  set_fact:
    public_key: "{{ wireguard_pubkey.stdout }}"

- name: get internal address
  set_fact:
    private_ip: "10.0.0.{{ groups['ec2'].index(inventory_hostname) + 1 }}"
  when: "inventory_hostname in groups['ec2']"

- name: get internal address
  set_fact:
    private_ip: "10.0.0.{{ groups['local'].index(inventory_hostname) + 10 }}"
  when: "inventory_hostname in groups['local']"

- name: get external address
  uri:
    url: http://canihazip.com/s
    return_content: yes
  register: ext_addr

- name: save external address
  set_fact:
    external_ip: "{{ ext_addr.content }}"

- name: create wireguard dir
  file:
    path: /etc/wireguard
    state: directory

- name: configure wireguard
  template:
    src: wg.conf.j2
    dest: /etc/wireguard/wg0.conf
    owner: root
    group: root
    mode: 0600

- name: check if interface already exists
  shell: wg
  register: wg_out

- name: remove old interface
  shell: wg-quick down wg0
  when: wg_out.stdout.find('wg0') != -1
  
- name: start new interface
  shell: wg-quick up wg0
